---
- name: Add FNM_DIR(fnm_root) to runtime shell config
  # noqa 208
  lineinfile:
    dest: "{{ fnm_user_shell_rc }}"
    line: "{{ item.line }}"
    regexp: "{{ item.regexp }}"
    create: true
    state: present
  with_items:
    - regexp: '^# Define FM_DIR'
      line: "# Define FMN_DIR"
    - regexp: '^export FNM_DIR.*'
      line: "export FNM_DIR={{ fnm_root }}"
  when:
    - not fnm_skip_shell

- name: Install fnm
  shell:
    cmd: |
      set -o pipefail
      curl -fsSL https://github.com/Schniz/fnm/raw/master/.ci/install.sh | \
        bash -s -- --install-dir "{{ fnm_bin_dest }}"  {% if fnm_skip_shell %}--skip-shell{% endif %}
    executable: /bin/bash
  args:
    creates: "{{ fnm_bin_dest }}/fnm"

- name: Install nodejs via fnm
  shell:
    cmd: |
      set -o pipefail
      eval "$(fnm env)"
      fnm install {{ item }}
    executable: /bin/bash
  environment:
    PATH: "{{ fnm_bin_dest  }}:{{ ansible_env.PATH }}"
    FNM_DIR: "{{ fnm_root }}"
  register: fnm_results
  changed_when: "'successfully downloaded' in fnm_results.stdout"
  with_items: "{{ fnm_nodejs_versions }}"

- name: Define fnm_default_nodejs_version
  set_fact:
    fnm_default_nodejs_version: "{{ fnm_nodejs_versions|first }}"
  when:
    - fnm_set_default_nodejs_ver|default(true)
    - fnm_default_nodejs_version is not defined

- name: Set default nodejs version via fnm
  shell:
    cmd: |
      set -o pipefail
      eval "$(fnm env)"
      fnm use {{ fnm_default_nodejs_version }}
      fnm default $(node --version)
    executable: /bin/bash
  environment:
    PATH: "{{ fnm_bin_dest  }}:{{ ansible_env.PATH }}"
    FNM_DIR: "{{ fnm_root }}"
  args:
    creates: "{{ fnm_root }}/aliases/default/bin"
  when:
    - fnm_set_default_nodejs_ver|default(true)

- name: Get default nodejs version via fnm
  shell:
    cmd: |
      set -o pipefail
      eval "$(fnm env)"
      fnm use {{ fnm_default_nodejs_version }} > /dev/null 2>&1
      readlink -f $(command -v node) | sed  -E "s%/node$%%g"
    executable: /bin/bash
  environment:
    PATH: "{{ fnm_bin_dest  }}:{{ ansible_env.PATH }}"
    FNM_DIR: "{{ fnm_root }}"
  register: fnm_default_nodejs_path_results
  changed_when: false

- name: Definde default_nodejs_path
  set_fact:
    fnm_default_nodejs_path: "{{ fnm_default_nodejs_path_results.stdout }}"

- name: Install nodejsjs modules
  npm:
    name: "{{ item.name }}"
    global: true
    version: "{{ item.version|default('latest') }}"
  environment:
    PATH: "{% if item.nodejs_version is defined %}{{ fnm_root }}/nodejs-versions/v{{ item.nodejs_version }}/installation/bin{% else %}{{ fnm_default_nodejs_path }}{% endif %}:{{ ansible_env.PATH }}" # noqa 204
  with_items: "{{ fnm_npm_global_packages }}"
  when: fnm_npmrc_suffix is not defined

- name: Install nodejsjs modules with npmrc
  when: fnm_npmrc_suffix is defined
  block:
    - name: Make directories required
      file:
        path: "{{ fnm_user_home }}/{{ fnm_npmrc_suffix|dirname }}"
        mode: "0755"
        state: directory
        owner: "{{ fnm_user }}"

    - name: Install npmrc
      template:
        src: npmrc.j2
        dest: "{{ fnm_user_home }}/{{ fnm_npmrc_suffix }}"
        mode: "0644"
      when: fnm_install_npmrc|default(false)

    - name: Install nodejsjs modules (npm)
      npm:
        name: "{{ item.name }}"
        global: true
        version: "{{ item.version|default('latest') }}"
      #command:
      #cmd: npm install -g "{{ item.name }}"
      environment:
        PATH: "{% if item.nodejs_version is defined %}{{ fnm_root }}/nodejs-versions/v{{ item.nodejs_version }}/installation/bin{% else %}{{ fnm_default_nodejs_path }}{% endif %}:{{ ansible_env.PATH }}" # noqa 204
        NPM_CONFIG_USERCONFIG: "{{ fnm_user_home }}/{{ fnm_npmrc_suffix }}"
        XDG_CACHE_HOME: "{{ fnm_user_home }}/.cache"
        XDG_CONFIG_HOME: "{{ fnm_user_home }}/.config"
      with_items: "{{ fnm_npm_global_packages }}"
